-- Explore all objects in the database
SELECT * FROM INFORMATION_SCHEMA.TABLES


-- Explore all columns in the database 
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'

-- Explore all countries our customers come from
SELECT DISTINCT countrY FROM gold.dim_customers

-- Explore all categories "The major Divisions"
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_products
ORDER BY 1,2,3

-- Find the date of the first and last order 
-- How many years of sales are available 
SELECT 
    MIN(order_date) AS first_order_date,
    MAX(order_date) AS last_order_date,
    DATEDIFF(MONTH, MIN(order_date), MAX(order_date)) AS order_range_month
FROM gold.fact_sales;

-- Find the oldest and youngest customer in the data
SELECT 
    MIN(birth_date) AS oldest_birthdate,
    DATEDIFF(YEAR, MIN(birth_date), GETDATE()) AS oldest_customer_age,
    MAX(birth_date) AS youngest_birthdate,
    DATEDIFF(YEAR, MAX(birth_date), GETDATE()) AS youngest_customer_age
FROM gold.dim_customers

-- Find the total_sales
SELECT SUM(sales_amount) AS total_sales FROM gold.fact_sales;

-- Find how man items are sold 
SELECT SUM(quantity) total_quantity_sold FROM gold.fact_sales

-- Find the average selling price 
SELECT AVG(sales_amount) AS average_Selling_price FROM gold.fact_sales

-- Find the total number of orders
SELECT COUNT(DISTINCT order_number) AS total_orders FROM gold.fact_sales

-- Find the total number of products 
SELECT COUNT(DISTINCT product_name) AS total_products FROM gold.dim_products

-- Find the total number of customers
SELECT COUNT(DISTINCT customer_key) AS total_customers FROM gold.dim_customers

-- Find the total number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) AS total_customers FROM gold.fact_sales

-- Generate a report that shows all key metrics of the business
SELECT 'total_sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'total_quantity_sold' AS measure_name, SUM(quantity) measure_value FROM gold.fact_sales
UNION ALL 
SELECT 'average_Selling_price' AS measure_name, AVG(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'total_orders' AS measure_name, COUNT(DISTINCT order_number) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'total_products' AS measure_name, COUNT(DISTINCT product_name) AS measure_value FROM gold.dim_products
UNION ALL
SELECT 'total_customers' AS measure_name, COUNT(DISTINCT customer_key) AS measure_value FROM gold.dim_customers

-- Find total customers by countries 
SELECT country,
       COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC

-- Find total customers by gender
SELECT gender,
       COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC

-- Find total products by category 
SELECT category,
       COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC

-- What is the average costs in each category?
SELECT category,
       AVG(cost) AS avg_costs
FROM gold.dim_products
GROUP BY category
ORDER BY avg_costs DESC

-- What is the total revenue generated for each category?
SELECT 
    p.category,
    SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p 
ON f.product_key = p.product_key
GROUP BY p.category
ORDER BY total_revenue DESC

-- Find total revenue is generated by each customer 
SELECT 
    c.customer_key,
    c.first_name,
    c.last_name,
    SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON f.customer_key = c.customer_key
GROUP BY c.customer_key,
         c.first_name,
         c.last_name
ORDER BY total_revenue DESC

-- What is the distribution of sold items across countries?
SELECT 
    c.country,
    SUM(f.quantity) AS total_quantity_sold
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c 
ON f.customer_key = c.customer_key
GROUP BY c.country
ORDER BY total_quantity_sold DESC

-- Which 5 products generate the highest revenue?
SELECT TOP 5    
    p.product_name,
    SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p 
ON f.product_key = p.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC

-- What are the 5 - worst-performing products in terms of sales?
SELECT TOP 5    
    p.product_name,
    SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p 
ON f.product_key = p.product_key
GROUP BY p.product_name
ORDER BY total_revenue ASC

-- Find the top 10 customers who have generated the highest revenue
SELECT TOP 10
    c.customer_key,
    c.first_name,
    c.last_name,
    SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON f.customer_key = c.customer_key
GROUP BY c.customer_key,
         c.first_name,
         c.last_name
ORDER BY total_revenue DESC

-- The 3 customers with the fewest orders placed
SELECT TOP 3
    c.customer_key,
    c.first_name,
    c.last_name,
    COUNT(DISTINCT f.order_number) total_orders_placed
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON f.customer_key = c.customer_key
GROUP BY c.customer_key,
         c.first_name,
         c.last_name
ORDER BY total_orders_placed ASC
